<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOkAAADpCAYAAADBNxDjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAAYV0lEQVR4Xu2dPc8lSVKF9yfMT5ifMB7uCBukNjFH+Ij2wEBiJCRMaAsJIcFYiHVQY/BhwQoh4UHj
        ILAYrYEwYLdX7LKrXWZe4nTfYqrjPVm3KjMyM6ruCenRaKLrrcrIzHPzs7K+9fT0JIRIDHUKIfJAnUKI
        PFCnECIP1CmEyAN1CiHyQJ1CiDxQpxAiD9QphMgDdQoh8kCdQog8UKcQIg/UKYTIA3UKIfJAnUKIPFCn
        ECIP1CmEyAN1CiHyQJ1CiDxQpxAiD9QphMgDdQoh8kCdQog8UKcQIg/UKYTIA3UKIfJAnUKIPFCnyMv3
        fu3nPjI+XfHC+HyDz4z19R+z+4q8UKeYy01MEBdE9tr4jvHWeAoG9wV4zksDz/2IpUnMgzrFOEwUn9wE
        8oXxxmBiGs2XBn4cIN5PWbrFOKhT9MMq/SJKtGBMIFlZWlyJdjDUKWKxio1xI1pKtFBMAGcDXW+0tOiS
        q3vcGeoU7VjlXYTZYyyZDQm2I9Qp6rBK+rHxyngEYTIQN36YPmH5I+qgTnEMq5RoRc42xuwNJsHUugZA
        neI+qHwGJoCuMs7sBVpXTDhJrJVQpyiDynardI/apW0BXWFtpjgIdYrnWOWSOOOQWA9AneJDrEKhWytx
        xqJu8E6oU7zHKhC2yWnM2ReI9TOW/+I91PnoWKXBUgrW/lilEn3A7LiWbgjU+chYRVHXdi5YZ1YXeAV1
        PiJWMbCnNssG92l8/zd//um/f++X3/2X/fsgMMTQHuEb1PloWIU4besJQZVg12/xoz/+9aev/+f7liXv
        7Sd/+bv0uiiQxjs/Bq8sGWhV9wgW1+3pLmNW+VTdaup8FKwSYFkl9U4hVGSIB4L533/923fsNXa/Em9/
        +xc/EOhiP/37P6HXt4J4YIiH/fvCT//hz/7r3YVPTy8NWo433hiwFwb7dwCBvjVgp2mpqfMRsAqAmdtU
        rSeEAkFCGF999x8tmW3GnlFiEQ0zpIn9TQtf/ee/3e6+nc7Fvvred//F/kPL0kDLuNhrg10DIPTFvjDY
        NemgzqtjhY/1OVopRvPDP/yV96JcVdooY88rsfV8tLD4AWF/V8vatrrmi91a3JKw0Cou9h2DXQM+Nxbb
        ui4V1HlVrJDRvcVul2eVYSSLMFn3MtLYsxkQ4D2L7vaubY9I8SNy82Fyz8/+SqRXAAV7K+APKsEofvA7
        vzREmGtj6WBAJHtsS0xHWVvpvj5dq3/DMGU9+bPuxm6JD13hxSTSTKBAbwW7LughYDx3ZLIn0lh6GFvj
        0bVFtqZrqxApQHkuk0TrFhL2rA7cgDAXk0izYAU5ZYII4uwxzjxiLF2MvSKFRY1N14buP7vmjkgXsKVQ
        Ij0rKEBXoN3JIM7FWPoYaCH32k/+5g/oPY6yNvxIsGt2ivTpZ//0F391u2QxWh8MiTQTVnhDBYrWIIs4
        F2PpZBzpjmNMze5xlLWVRIo8XRvG9ew60hOgdcKQSLNgBTdMoOj+zRpz3jOWXsbR9Je6p0dYW0mkXnyl
        sStJf2nv79ok0llYoQ0TKPkFT2UszYyjIv3Zmz+n9znC2jqItLSbaG0S6QyswIYIFJUlW9eWGUs7o6Yn
        wO5zhLWVZo1rRfqjb/9GadPD2iTS0VhhYRaXFmIkM1tPjAdRIVGpkQ5MUqHiLqw3qx+Zha0RaWuXd214
        PrumVqS369iL5GuTSEdiBdJ9HRSVPmI/7RFD5UNFhSB6vjpWI9KWNVNMAK2tJFI/64y8YNf5clmJeS1U
        jFPXJpGOwgoCpyh0FShEMmKnELrQWOKImJg5Qo1IkVZ2rz1ARGsridSnqyRSb+6FgGVn0nrrIOxL41l9
        ygh1ngUrgO5b/X78p79lj+pnED9ajNLywghqRAqrTXNvkbrr8AOOV9S8SGG0XmWDOs+CZX7Xc4h8dyvS
        UAHdL/40akWKHzB2v3t4kZZa5SCRgjdf/fs//8Ltn9dG61U2qPMMWMZ3e90M479e408IfzVmqgItGO6B
        ygiwJIIKzWB/78F1NVa7FONFCmPX+XSVdjt5Y2L+4R/96t/d/nlttG5lgzqzY5nebSa3l0BRoWv2vSI9
        GKOigtaIid3TUyvS2t1He0Xq5wHYjw7y1BsTKXotxGj9ygZ1ZsYyvNtEUQ+BomIdbTnRUqKiRaSF3d9T
        K1JYzQ/PXpF6YyJl92ItPPKTGK1j2aDOzFiGdzmTKFqgaAWOjDlR2THGi94kwZ7laRFpzbi6t0jZdRLp
        ICyzu4xDowWKX3Lckz3Lg0rWc4KKPdPTItKat2KYsNhMsTeJNDmW0diw8CzzW4kUKFrPvWucqFwt4thr
        7NmelnQwQdyDCQs+f503NgsskSbCMrrLemiUQFEx9rSeo8S5GEuDpzU97J5b7BEpuwa2vgawdWwmUvRu
        vJm/9LZMKqgzG5aZXbq5Ud1M/Eqz+6+BgHt2a0vG0uJpFenRyaNIkRZayGfXsRjNv3X8ZxqoMxOWkZjN
        fZbprUTsJNo7OYRn+eWEUcbS42kV6dFtjIlECrYO004BdWbCMjF8NrdUAY4YRHdvWxxamFYBtBpLl6c1
        jXt6EmtY/vt7DBQpvjuTuttLnVmwzHtxy8gwIJzWVg3j2HsCHbUp/56xtHlaRXp051GLSH2+B4gU4CAz
        WgczQJ0ZsIzD5vnwD/i2ThTh7+9NEGFZIoux9HlaRYo8YfctsUekJfHhb9fXldLuy4jZ+t8NbMKndXE2
        1JkBy7TwyaJSwe+1ewLFv7VW+Ghj6fREpJndt8QIkfrrmK3/3Uj7bRjqnI1lGFrR0K1/6Ca1GNbo7gm0
        tZXuYSytngiRHpnhTSpSUDobaSrUORvLrPBWtGW73b1JIvxbhvEnM5ZeT4RIvSi2YJvdkYb1NZNEmvK0
        BuqciWVU+JJLqcD32lkFCmNp9kSI1LeEW7DyeCbSwrjeP6fUe9kj0kLPKF1rSp0zsUwK/eoZumEttrUO
        ml2gMJZuT4hID+zh3SPSUpq8SEu2LjcIllmh9U/XmlLnLCyDwseiLRVwq+LhVzi7QGEs7Z4IkXqRbTFC
        pOvrDooUpGpNqXMWljmhY1GsVdba1rJC1kkiZiz9ngiRlo5AYTCR+vyeLNJU2wWpcwaWMeGtaO1kEVrI
        rdlKtlk7q7H0eyJECmP3ZjCRwtbXFEXqejclaxQpSLNuSp0zsEwJPX2ezSDuta29qJk2KuwxFoMnSqRb
        E2xrSiKFf6H0Awv/+rqSIablmtKLDXdEmmbdlDpnYJkSuruothXd2uLW0n2eZSwOT5RI71T6/2dLXCPt
        TnrRq0uxp5c6R2OZEXqwWG0rutXNPctEkTcWiydKpHuP+DyJSAH7VMVwqHM0lhmhyy61rehWJYuqyKON
        xeKJig3iY/f3nEikb+wyWmdHQp0jsYwInTCqbUUhbHY/0DK+nW0sHk+USHEfdn/PiUQKls9UTIM6R2KZ
        EDphVLs0Uiqws3ZzF2MxeSTSTV7ZpbTujoI6R2KZEPapCMwu1thW5Zpx5EmksZg8USKFsft7TibS6R92
        os5RWAagq8sypopaQZUKq1b0mYzF5ZFI7zK1y0udo7Dgw7q6td3SrVY0svLOMhaXJzLOPRX/hCKd2uWl
        zlFY8GFd3drJnVJBwX8FY7F5JNK7TO3yUucoSGZUU7NVb2tG9wqtKIzF5omMdc9a6QlFCqZ1ealzBBZ0
        2CFj6OrWGFpfdr8rjEUXY/F5IkUKAbJnrMki0iOnSRgv7U9oXe4NdY7Agn7lMqGa2q4uxM3ud/YZ3bWx
        +DyRIt1zcmCGoQTmL1jaNpj2nil1jsCCDvtsRE1XF0Jk96ptlbMai9ETKVLciz3DM3vtuVT+W5jRutwb
        6uyNBRy69FJT4KU3XSJOts9kLEZPpEi3xvlrZr9NdHA8ujDlZXDq7I0FGzYerek6bXV1zvIy915jMXoi
        RQpjz/BgPDirNd3b2hOmHKJNnb1BsC74amomIUpdndbzkDIai9MTLdLSWN8zawKpshUFU05soM7eWLBh
        33epqWCP0tWFsTg90SI9IoLRPZcjB6YR3totaJ3uCXX2BsG64Kup6TKVfumv1tWFsTg9M0U68sRFf45S
        JcOPVaHOniBIF3Q1NeuZpYK62qzuYixWT7RI9778vTBCqCj3vd3wOwyfPKLOniBIF3Q1Neujpe7OGY9G
        2WMsVk+0SPdsaPBAqL16MpiDCBIoGD55RJ09QZAu6GpqJh5K49GzHTC211isnnCRNoz7UKa1J2t4Q1wN
        k0Qlhk8eUWdPLMiwo1JqKldpK9gVx6MwFqsnWqS4H3vOEdCy1kzkoRwhzMCW0zN85xF19gRBuqCrqREW
        uw+4qrFYPRlFCiC2oxb17C3MaN3uBXX2xIIMm9k9aqUCrJmAOouxeD3RIt3aLHIEifQ91NkTFnQNNbOx
        pU0MV500grF4PdEihbHnHCWrSI2hM7zU2QsLLmz5paYAS7OOs3a+jDAWr0ciPcylRRq2/FJTgKX3R9HC
        XtVYvJ4eIkX5sGcdIbFIh75bSp29sODCRFoz81eqOD0qaRZj8XqyirSmjAeJdOhaKXX2woILO3isposq
        kXJ6xF9ajz5CTRlLpI0gOBdsNTUFWFwjDVo8z2gsXk8PkZbG/0dILNKhpwdSZy8suKkiZfcBVzYWr+dK
        It370nkjQzc0UGcvLDiJdLCxeD1XEimM3SsYiXQPEuk+Y/F6eog0otspkb6HOnthwUmkg43F65FIDyOR
        7kEi3WcsXo9EehiJdA8S6T5j8Xp6iDRiAkcifQ919sKCmypSbKRn97rqa2owFq+nh0hh7FlHkEjfQ529
        sOCmilSbGTgS6WEk0j3UHJ0ikXIk0sNIpHuA4I5a6YCsqx6dAmPxeiTSwww9QoU6e2HBvXTBVlMjUhQ6
        u1dtZTiDsXg9vURamgPYS2KRXnrvbthbMOColb74VSP4sxiL19NLpKXhxV4k0vdQZy8suKkixSwuu88V
        Py+xGIvXI5Ee5tIi/cQF20RN5WL3AVc1Fqsnq0hrPmkJY/cK5ronMwAScDU1hVgaJ/WqqLONxerpFXvr
        sZq16WL3CkYi3UtNd6h0hMpVJ49YrJ4eIsU92bOOkFikQ78HQ509sQDDzt2tOeXv0U4MZLF6WkSK7X/4
        gVvAj2Dp5fqj1KYr6vklzGjd7gV19sSCDBNpzYTP1p7SKxqL09Mi0ogWs0RtulrHwnd4Y4+gdbsX1NkT
        CzJsQwOoOfqk9EtbO1GR2VicHon0EEN3GwHq7IkFGXYYGagRVmlcWnM6XXZjcXok0kMMXX4B1NkTCzJ0
        rbRGWKVNDVdcL2VxeiTSQ3xmj6B1uxfU2RsSeDW133EpLQ9crcvLYvRIpIf4xB5B63UvqLM3FugbF3gT
        NePSUpe35u2azMZi9Eik+zGjdbon1NkbCzbsG6Wg5jMRpS4v6P1p+JHG4vNIpLsZPmkEqLM3Fmzo5FHt
        GmdplvdKr66x+DwS6W6GHoq9QJ29sWBD9/CCmtYPi+/sXleaQGLxeSTS3byw29M63RPqHIEFHPYxYVDT
        5d362O1VvrTGYvNIpLv5yG5P63NPqHMEFvBrlwFN1HZ5SxNIV2lNWWweiXQXw3caLVDnCCzo0HEpqJnl
        3domeIXWlMXlkUh3MWU8CqhzBBZ02Fe/F2onfLZa07PP9LK4PFlFWpv3nUQ6ZTwKqHMUFnjoemltF3Wr
        NT37K2wsJk9WkdZaD5Ga0To8AuochQX/ymdGK7U7hkqtKajpRmcxFo9HIr3L0NMBPdQ5Cgs+fCkGBVRj
        6FqVtgrW3jODsXg8VxNp6ejWBobv111DnSOxDPjSZUgztZUOY1p2P3DWDQ4sFs/VRFpa/25gytLLAnWO
        xDIgvMvbcspC6QwktLJn/GYMi8UjkW4ytasLqHMklgnhs7ygtuKVjv0EEPDZZntZHB6JdJNps7oL1Dka
        y4jQWV7QMo7cKuSzvSXDYvBIpEXe2u1onR0JdY7GMiN8YwNoqXxbM4RnGp+y9Hsk0iLTNjCsoc7RWGZ8
        ZITu5QW1L4TDsOyydW7sWXYjsbR7JNIiQ4/uLEGdM7AMCZ9AAi1i2qqAZ5lIYmn3SKSUKe+OMqhzBpYp
        XSaQIKaWyZ6tZZkzCJWl2yORUqZPGC1Q5ywsY0LfjFlonezZ2o2UXagszR6J9Blf2m1oHZ0Bdc7CMif0
        JME1LRURhrVXdl+QWagsvR6J9BlTdxh5qHMmlkFhJ9yvaX2jBX9b2ugAINSMk0ksrR6J9ANStaKAOmdi
        mdStNW393ss9oYJsyzMsjR6J9AOGH359D+qcjWVUl9YUtLZ2e4SKMWxLqx1pLH2ejCJtWT5rECn2kU/d
        p8ugztlYRnVrTSPGjxDg1hgVoJJlGKeytHkyirTXjrE7pBqLLlBnBizDurWmEFBES7c167uACjPTWJo8
        Euk70o1FF6gzA5ZpXdZNF1rHp4ttraMuzGxVWXo8VxNpZZrSrIt6qDMLlnFddiEtRG2WR6VAN5o9Yw1e
        Rh49VmXp8EikeXYXMagzC5Z5Xfb0rolaNoH4tjblL0DM6I6NEitLg0ciHf8RpiNQZyYsA7u8IbMmcn1z
        73holFjZsz0PLtIUb7psQZ3ZsIzsNom0EClUjD/3tKoAYkU3uNdhZ+yZngcWacolFw91ZsMyEpNIXbu9
        IHrHECaV9oxVF1AxkYbI1pU9x/PAIv3ULqd1LhPUmRHL0Jcug7sQLVQIrmZJALPPEHlrC8vu7XlQkabv
        5i5QZ1YsY7t3e0G0UGEQ2551VQb2HeNvIVpUwCMtLbuf5wFFeopu7gJ1ZsUydki3F/TagwuxYgx6pBvM
        wN+jIr9rca2lXoNKikPC97bgDyjSU3RzF6gzM5bBL1yGdyNqHZUZWkO02Pf2AY/gwUSabgP9PagzO5bR
        XTc5rEFl6b1MgtlgtK7o1rI09OaBRJp600IJ6jwDluHhx4CWgHhGbevDc9BNRSVlaenBg4gUw6TTjEPX
        UOcZQIbfMp4VSBd6jVO3DBUOosXYs1fX+EFEmnpX0RbUeRaQ8a4gugOx9O7+3jO0tu/Eaz8ay2QRusuo
        2GtY+hkZRYqYao2kKeUraHuhzjOBAnAF0h3MrNZ+YnGksbQzLi7S06yHlqDOs2EF8fmqUIaB1qrXdr4I
        Y2lmXE2k6Gnc7vOF/S+tM2eCOs8ICmQp4JGgVUWFmt0FZsbSy7iaSGF2D0wsnnKiyEOdZ8UKZYpQAWaA
        e+xUajGWTsZFRXoJgQLqPDNWOEO2DpbIJFaWPkbL+DqrSM1o/Tgj1HlmrICxNDNsDbVEBrGydDFaBIG/
        ZfdsRSL9Buo8O1bIKYQKIFYslcwYs7L0MLD+Wmu91m4l0m+gzqtghT1tjMrAXuCRSzcsDSVqxqWrWdRw
        GvdNvzFonTgj1HklrMBTCRWgdX13GkPnrYbs2SVqWtOeLwe0tO5mrw1aH84IdV4NK/RhG/KPgiUctBoY
        v0Z3idnztjjSeuFado9IGtagT73DyEOdV8QKffjOpBrQgiyibVkagbH73wPP33ou/q1nC7qmclya9pDr
        WqjzqljB4/MVQzflRwBRYHcTKi2AUMC97jK7117wTHTJl2fOepWuYkiQ9pDrWqjzyljBY1N+iplfcR8M
        Bw4I9VLd3AXqvDpW+FiiSTehJDjvtl7+9e//x9PXX//Ayo8ZXuY+7ato96DOR8EqAMapp+v+PiDrI09w
        PhH+H6Dl/Nj4oFyvBnU+ElYB1P3NC35AT3VoWA+o8xGxyjDldTdR5LVxmU3yLVDno2KVQq3qfNB6Xm6G
        tgXqfHSskqBV1Vh1PNh0otbTQZ3inVBxEDe6XKwyiVjweuFlZ2dboU7xDVZ5sAFCXeA+4HMPl1zbjIQ6
        xXNQmW6VilU2cQwMJTCkUNd2B9QpyljFkljrkTgroE5xH6toEut+kE8SZyXUKfZjFQ8fkJp6rlJiMJbX
        mLMR6hTHscqI2WAsITz60g3ix77oh98pFAV1ijasgqJ1fbTlG/QmMARQlzYY6hQxoMLeKu5VBYvu7Evj
        8pvcZ0KdIh6ryBAsWlh0Bc864bR0ZdViDoQ6RX+skmMMi8qOSp91swR+TJA+tJbaETQJ6hRzMCFgdxME
        AWFgjDdyEgrPw3OxVIJ0qKVMAnWKXNxEswgYIgIQ1VEw+7z8/XJPiTE51CmEyAN1CiHyQJ1CiDxQpxAi
        D9QphMgDdQoh8kCdQog8UKcQIg/UKYTIA3UKIfJAnUKIPFCnECIP1CmEyAN1CiHyQJ1CiDxQpxAiD9Qp
        hMgDdQoh8kCdQog8UKcQIg/UKYTIA3UKIfJAnUKIPFCnECIP1CmEyAN1CiHyQJ1CiCw8fev/AIvYOUOC
        YkEtAAAAAElFTkSuQmCC
</value>
  </data>
</root>